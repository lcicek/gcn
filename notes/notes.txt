TLDR:
Takeaways:
1. Low cast [3-7] is a predictor for 1-label.
2. High cast [50+] is a predictor for 0-label.
3. Medium cast [8-50] has a lot of variance but it has a tendency to 1-label.
4. Single movie graph predictions can be computed correctly.
5. Single central node graphs with movies that all have the same cast can be computed fully.
6. Single central node graphs with differing cast sizes can be approximated very roughly.
_____________________

Observation:
Predicting the value of graphs that contain just one movie, i.e. graphs where each
actor is connected to each other actor, is straightforward:
In single movie graphs, the graphs contain no information other than the size of the
cast. Thus, given a fixed value for the cast, the model outputs a fixed prediction (see
calculateMovie.py):

- In the range [3-7] the model is fairly certain about its prediction, i.e. a low cast
indicates a 1-label.
- In the range [50+] the model is fairly certain again, i.e. a high cast indicates a 
0-label.
- In the range [7-50] there is a lot of variance but the tendency is towards label 1.
_____________________

Single_central_node_graphs (i.e a graph with one actor who appears in several movies with
other completely new actors) operate like the following:
Each movie with a fixed cast (degree+1) has a pre-defined value:
E.g.:    
    movie[4] = 1
    movie[6] = 0.98

In general, the model seems to make its prediction by computing

        pred = c1 * movie[cast1] + c2 * movie[cast2] + ...

where ci is some constant that weighs each movie.

Since in symmetric graphs each model has the same cast, we can weigh each movie equally to
get the formula:

	pred = 1/num_movies * (movie[cast1] + movie[cast2] + ...)
	     = movie[cast]

This formula confirms what can also be observed by deleting movies from a graph like this:
Deleting a movie from a graph does not affect the prediction.
___________________
Single_central_node_graphs with differing casts per movie can be very roughly
approximated with the same function but fall short in a lot of cases. This makes
sense as the problem to solve isn't as simple as the equation mentioned above.
___________________
Two+_central_node_graphs (i.e. two actors appear together in movies with other
completely new actors) operate differently:
Example: Graph(num_movies=5, cast=5, overlap=2) (i.e. 2 actors appear in 5 movies where
the cast is of size 5 (or size 3 without the 2 actors))

Graph(5, 5, 2) has prediction: pred = 0.47 (calculated by the model)

But removing the central node and computing prediction of sg(5, 4, 1) yields:
		
		approximation = 1 != 0.47 = pred

Also: Unlike before, removing movies DOES affect the prediction.
_______________________

Given a graph similar to a single_central_node_graph and containing three different movies
with cast sizes in range small (1), medium (0.5) and high (0): 
Decreasing the size of the medium cast movie to be in range small pushes the prediction
towards 1. Decreasing this new small movie even further to a cast of size 1, 0 reverses
this effect, as the decreased movie is now too small to be relevant.